---
layout:     post
title:      "iOS RTMP直播视频笔记"
date:       2015-01-29 12:00:00
author:     "Anthony"
catalog: true
tags:
    - RTMP
    - HLS
    - Live Video
---

因为项目需求，需要了解在iOS上直播视频的技术。所以写下此笔记.

# 奋力挖坑

在谷歌和苹果上看了两三天的资料，因为看到一句苹果有要求较长的视频需要使用HLS来进行播放，否则的话app无法上架。。当时就各种懵逼。然后上Stack Overflow上逛了好久，也没有个确切的答案。最后在知乎上看到说，好像是没有非常强硬的要求。所以就决定先挖个坑给自己跳，先搞搞RTMP。不跳跳怎么知道坑有多深。。。。

# 基础知识

既然都要挖坑了，就先了解下基础知识。。不然连什么是RTMP和HLS都不知道

## RTMP

Real Time Messaging Protocol（摘自维基百科）是用于Flash播放器和服务器之间传输音频，视频和数据流的专有协议。它有多个变种：

	1. 工作在TCP之上，默认的端口是1935
	2. 通过TLS/SSL连接的是RTMPS
	3. 使用Adobe自己的安全机制进行加密的是RTMPE。细节的实现是专有的，该机制使用的是行业标准的加密原语
	4. 在穿防火墙时在HTTP加密的是RTMPT
	5. 在UDP上传输的是RTMFP


## HLS

HTTP Live Streaming（缩写是HLS）是一个由苹果公司提出的基于HTTP的流媒体网络传输协议。是苹果公司QuickTime X和iPhone软件系统的一部分。它的工作原理是把整个流分成一个个小的基于HTTP的文件来下载，每次只下载一些。当媒体流正在播放时，客户端可以选择从许多不同的备用源中以不同的速率下载同样的资源，允许流媒体会话适应不同的数据速率。在开始一个流媒体会话时，客户端会下载一个包含元数据的extended M3U (m3u8) playlist文件，用于寻找可用的媒体流。(摘自维基百科)

## FFMPEG

FFMPEG可以用于多个平台的音频和视频流的转换，录影等功能。

官网主页[FFMPEG](https://www.ffmpeg.org/)

### 安装

将[gas-preprocessor](https://github.com/libav/gas-preprocessor)下载到本地，将文件内的`gas-preprocessor.pl`copy到/usr/local/bin/目录下，然后修改为可执行权限

`chomd 777 /usr/sbin/gas-reprocessor.pl`


安装yasm

`brew install yasm`

### 编译

下载编译脚本文件[FFmpeg-iOS-build-script-master](https://github.com/kewlbear/FFmpeg-iOS-build-script),执行build-ffmpeg.sh

	* 编译所有版本arm64, armv7, x86_64静态库

	`./build-ffmpeg.sh`
	
	* arm64

	`./build-ffmpeg.sh arm64`
	
	* armv7和x86_64

	`./build-ffmpeg.sh armv7 x86_64`
	
	* 编译合并版本

	`./build-ffmpeg.sh lipo`

	
## 使用

编译成功后，将整个文件夹添加到Xcode后需要添加依赖库libz.lib, libbz2.lib, libiconv.lib（我使用的是Xcode 7.3的，所以依赖库都是以tbd结尾了）

由于我用的swift，所以需要添加bridging-header文件。创建一个.c文件的话，Xcode就会问你是否要创建一个bridge文件。之后在里面导入.h的header即可


# 资料参考

1. [HTTP Live Streaming](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/StreamingMediaGuide/Introduction/Introduction.html)
2. [iOS RTMP上推直播视频](http://leyleo.github.io/%E6%8A%80%E6%9C%AF/2016/03/15/iOS-rtmp-live-stream)
3. [PLCameraStreamingKit](https://github.com/pili-engineering/PLCameraStreamingKit)